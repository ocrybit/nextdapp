{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport sweet from \"firestore-sweet\";\nimport { mergeLeft, isNil, complement } from \"ramda\";\nimport { xNil } from \"nd/util\";\n\nvar NodeRSA = require(\"node-rsa\");\n\nvar shortid = require(\"shortid\");\n\nexport var getData = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(db, conf, url) {\n    var toRSAPublic, toRSAPrivate, fixedEncodeURIComponent, key, key2, pub, text, encrypted, public_key, id, encrypted_id, _getData;\n\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            fixedEncodeURIComponent = function _fixedEncodeURICompon(str) {\n              return encodeURIComponent(str).replace(/[!'()*]/g, function (c) {\n                return \"%\" + c.charCodeAt(0).toString(16);\n              });\n            };\n\n            toRSAPublic = function toRSAPublic(key) {\n              return \"-----BEGIN PUBLIC KEY-----\\n\".concat(key, \"\\n-----END PUBLIC KEY-----\");\n            };\n\n            toRSAPrivate = function toRSAPrivate(key) {\n              return \"-----BEGIN RSA PRIVATE KEY-----\\n\".concat(key, \"\\n-----END RSA PRIVATE KEY-----\");\n            };\n\n            key = new NodeRSA({\n              b: 512\n            });\n            key2 = new NodeRSA(toRSAPublic(conf.rsa[\"public\"]));\n            pub = key.exportKey(\"public\");\n            text = \"Hello RSA!\";\n            encrypted = key2.encrypt(pub, \"base64\");\n            public_key = key.exportKey(\"public\");\n            id = shortid.generate();\n            encrypted_id = key2.encrypt(id, \"base64\");\n            db.set({\n              date: Date.now(),\n              public_key: encrypted\n            }, \"crypt\", id);\n\n            _getData = /*#__PURE__*/function () {\n              var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(url) {\n                return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n                  while (1) {\n                    switch (_context4.prev = _context4.next) {\n                      case 0:\n                        _context4.next = 2;\n                        return new Promise( /*#__PURE__*/function () {\n                          var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(res, rej) {\n                            var once, to, ret, unsubscribe;\n                            return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                              while (1) {\n                                switch (_context3.prev = _context3.next) {\n                                  case 0:\n                                    once = false;\n                                    to = null;\n                                    ret = {};\n                                    _context3.next = 5;\n                                    return db.on(\"crypt\", id, /*#__PURE__*/function () {\n                                      var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(doc) {\n                                        return _regeneratorRuntime.wrap(function _callee$(_context) {\n                                          while (1) {\n                                            switch (_context.prev = _context.next) {\n                                              case 0:\n                                                if (!(doc !== null && xNil(doc.value))) {\n                                                  _context.next = 7;\n                                                  break;\n                                                }\n\n                                                once = true;\n                                                ret.data = JSON.parse(key.decrypt(doc.value, \"utf8\"));\n                                                clearTimeout(to);\n                                                _context.next = 6;\n                                                return unsubscribe();\n\n                                              case 6:\n                                                if (xNil(ret.response)) {\n                                                  res(ret);\n                                                }\n\n                                              case 7:\n                                              case \"end\":\n                                                return _context.stop();\n                                            }\n                                          }\n                                        }, _callee);\n                                      }));\n\n                                      return function (_x7) {\n                                        return _ref4.apply(this, arguments);\n                                      };\n                                    }());\n\n                                  case 5:\n                                    unsubscribe = _context3.sent;\n                                    to = setTimeout( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n                                      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                                        while (1) {\n                                          switch (_context2.prev = _context2.next) {\n                                            case 0:\n                                              _context2.prev = 0;\n                                              _context2.next = 3;\n                                              return unsubscribe();\n\n                                            case 3:\n                                              if (xNil(ret.response)) {\n                                                res(ret);\n                                              }\n\n                                              _context2.next = 8;\n                                              break;\n\n                                            case 6:\n                                              _context2.prev = 6;\n                                              _context2.t0 = _context2[\"catch\"](0);\n\n                                            case 8:\n                                            case \"end\":\n                                              return _context2.stop();\n                                          }\n                                        }\n                                      }, _callee2, null, [[0, 6]]);\n                                    })), 20000);\n                                    _context3.next = 9;\n                                    return fetch(\"\".concat(url, \"&crypt_id=\").concat(encodeURIComponent(encrypted_id))).then(function (response) {\n                                      return response.json();\n                                    });\n\n                                  case 9:\n                                    ret.response = _context3.sent;\n                                    console.log(ret.response);\n\n                                    if (xNil(ret.data)) {\n                                      res(ret);\n                                    }\n\n                                  case 12:\n                                  case \"end\":\n                                    return _context3.stop();\n                                }\n                              }\n                            }, _callee3);\n                          }));\n\n                          return function (_x5, _x6) {\n                            return _ref3.apply(this, arguments);\n                          };\n                        }());\n\n                      case 2:\n                        return _context4.abrupt(\"return\", _context4.sent);\n\n                      case 3:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }\n                }, _callee4);\n              }));\n\n              return function _getData(_x4) {\n                return _ref2.apply(this, arguments);\n              };\n            }();\n\n            _context5.next = 15;\n            return _getData(url);\n\n          case 15:\n            return _context5.abrupt(\"return\", _context5.sent);\n\n          case 16:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function getData(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar FB = /*#__PURE__*/function () {\n  function FB() {\n    var conf = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, FB);\n\n    this.conf = conf;\n    this.firebase = null;\n    this.storage = null;\n    this.firestore = null;\n    this.db = null;\n    this.init();\n  }\n\n  _createClass(FB, [{\n    key: \"init\",\n    value: function init() {\n      try {\n        this.firebase = window.firebase;\n      } catch (e) {}\n\n      try {\n        var config = {\n          apiKey: this.conf.fb.key,\n          authDomain: \"\".concat(this.conf.fb.id, \".firebaseapp.com\"),\n          databaseURL: \"https://\".concat(this.conf.fb.id, \".firebaseio.com\"),\n          projectId: this.conf.fb.id,\n          storageBucket: \"\".concat(this.conf.fb.id, \".appspot.com\"),\n          messagingSenderId: this.conf.fb.sender,\n          timestampsInSnapshots: true\n        };\n\n        require(\"firebase/firestore\");\n\n        try {\n          this.firebase.initializeApp(config);\n          this.firebase.auth().useDeviceLanguage();\n        } catch (e) {}\n\n        try {\n          this.storage = this.firebase.storage();\n        } catch (e) {}\n\n        try {\n          var sweetened = sweet(this.firebase.firestore);\n          this.firestore = sweetened.firestore;\n          this.FieldValue = this.firebase.firestore.FieldValue;\n          this.db = sweetened;\n        } catch (e) {\n          console.log(e);\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  }]);\n\n  return FB;\n}();\n\nexport var fb = function fb() {\n  return window._fb;\n};\nexport var db = function db() {\n  return window._fb.db;\n};\nexport var initFB = function initFB(_ref6) {\n  var set = _ref6.set,\n      conf = _ref6.conf,\n      global = _ref6.global;\n  return new Promise( /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(res) {\n      var isFB;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              if (!isNil(window)) {\n                _context6.next = 4;\n                break;\n              }\n\n              res({\n                err: true,\n                message: \"no window\",\n                code: 1\n              });\n              _context6.next = 10;\n              break;\n\n            case 4:\n              isFB = null;\n\n            case 5:\n              _context6.next = 7;\n              return new Promise(function (res) {\n                setTimeout(function () {\n                  if (isNil(window.firebase)) {\n                    res({\n                      err: true,\n                      message: \"no firebase\",\n                      code: 2\n                    });\n                  } else {\n                    window._fb = new FB(conf);\n\n                    if (xNil(global)) {\n                      global.fb = window._fb;\n                      global.db = window._fb.db;\n                    }\n\n                    if (xNil(set)) set(true, \"isFB\");\n                    res(mergeLeft({\n                      err: false,\n                      message: null,\n                      code: 0\n                    }, window._fb));\n                  }\n                }, 100);\n              });\n\n            case 7:\n              isFB = _context6.sent;\n\n            case 8:\n              if (isNil(isFB)) {\n                _context6.next = 5;\n                break;\n              }\n\n            case 9:\n              res(isFB);\n\n            case 10:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function (_x8) {\n      return _ref7.apply(this, arguments);\n    };\n  }());\n};","map":{"version":3,"sources":["/home/basque/hide/next-dapp/nd/fb/fb.js"],"names":["sweet","mergeLeft","isNil","complement","xNil","NodeRSA","require","shortid","getData","db","conf","url","fixedEncodeURIComponent","str","encodeURIComponent","replace","c","charCodeAt","toString","toRSAPublic","key","toRSAPrivate","b","key2","rsa","pub","exportKey","text","encrypted","encrypt","public_key","id","generate","encrypted_id","set","date","Date","now","_getData","Promise","res","rej","once","to","ret","on","doc","value","data","JSON","parse","decrypt","clearTimeout","unsubscribe","response","setTimeout","fetch","then","json","console","log","FB","firebase","storage","firestore","init","window","e","config","apiKey","fb","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","sender","timestampsInSnapshots","initializeApp","auth","useDeviceLanguage","sweetened","FieldValue","_fb","initFB","global","err","message","code","isFB"],"mappings":"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","sourcesContent":["import sweet from \"firestore-sweet\"\nimport { mergeLeft, isNil, complement } from \"ramda\"\nimport { xNil } from \"nd/util\"\nconst NodeRSA = require(\"node-rsa\")\nconst shortid = require(\"shortid\")\n\nexport const getData = async (db, conf, url) => {\n  const toRSAPublic = key =>\n    `-----BEGIN PUBLIC KEY-----\\n${key}\\n-----END PUBLIC KEY-----`\n  const toRSAPrivate = key =>\n    `-----BEGIN RSA PRIVATE KEY-----\\n${key}\\n-----END RSA PRIVATE KEY-----`\n  function fixedEncodeURIComponent(str) {\n    return encodeURIComponent(str).replace(/[!'()*]/g, function(c) {\n      return \"%\" + c.charCodeAt(0).toString(16)\n    })\n  }\n  const key = new NodeRSA({ b: 512 })\n  const key2 = new NodeRSA(toRSAPublic(conf.rsa.public))\n  const pub = key.exportKey(\"public\")\n  const text = \"Hello RSA!\"\n  const encrypted = key2.encrypt(pub, \"base64\")\n  const public_key = key.exportKey(\"public\")\n  const id = shortid.generate()\n  const encrypted_id = key2.encrypt(id, \"base64\")\n  db.set({ date: Date.now(), public_key: encrypted }, \"crypt\", id)\n  const _getData = async url => {\n    return await new Promise(async (res, rej) => {\n      let once = false\n      let to = null\n      let ret = {}\n      const unsubscribe = await db.on(\"crypt\", id, async doc => {\n        if (doc !== null && xNil(doc.value)) {\n          once = true\n          ret.data = JSON.parse(key.decrypt(doc.value, \"utf8\"))\n          clearTimeout(to)\n          await unsubscribe()\n          if (xNil(ret.response)) {\n            res(ret)\n          }\n        }\n      })\n      to = setTimeout(async () => {\n        try {\n          await unsubscribe()\n          if (xNil(ret.response)) {\n            res(ret)\n          }\n        } catch (e) {}\n      }, 20000)\n      ret.response = await fetch(\n        `${url}&crypt_id=${encodeURIComponent(encrypted_id)}`\n      ).then(response => response.json())\n      console.log(ret.response)\n      if (xNil(ret.data)) {\n        res(ret)\n      }\n    })\n  }\n  return await _getData(url)\n}\n\nclass FB {\n  constructor(conf = {}) {\n    this.conf = conf\n    this.firebase = null\n    this.storage = null\n    this.firestore = null\n    this.db = null\n    this.init()\n  }\n\n  init() {\n    try {\n      this.firebase = window.firebase\n    } catch (e) {}\n    try {\n      const config = {\n        apiKey: this.conf.fb.key,\n        authDomain: `${this.conf.fb.id}.firebaseapp.com`,\n        databaseURL: `https://${this.conf.fb.id}.firebaseio.com`,\n        projectId: this.conf.fb.id,\n        storageBucket: `${this.conf.fb.id}.appspot.com`,\n        messagingSenderId: this.conf.fb.sender,\n        timestampsInSnapshots: true\n      }\n      require(\"firebase/firestore\")\n      try {\n        this.firebase.initializeApp(config)\n        this.firebase.auth().useDeviceLanguage()\n      } catch (e) {}\n      try {\n        this.storage = this.firebase.storage()\n      } catch (e) {}\n      try {\n        const sweetened = sweet(this.firebase.firestore)\n        this.firestore = sweetened.firestore\n        this.FieldValue = this.firebase.firestore.FieldValue\n        this.db = sweetened\n      } catch (e) {\n        console.log(e)\n      }\n    } catch (e) {\n      console.log(e)\n    }\n  }\n}\n\nexport const fb = () => window._fb\n\nexport const db = () => window._fb.db\n\nexport const initFB = ({ set, conf, global }) =>\n  new Promise(async res => {\n    if (isNil(window)) {\n      res({ err: true, message: \"no window\", code: 1 })\n    } else {\n      let isFB = null\n      do {\n        isFB = await new Promise(res => {\n          setTimeout(() => {\n            if (isNil(window.firebase)) {\n              res({ err: true, message: \"no firebase\", code: 2 })\n            } else {\n              window._fb = new FB(conf)\n              if (xNil(global)) {\n                global.fb = window._fb\n                global.db = window._fb.db\n              }\n              if (xNil(set)) set(true, \"isFB\")\n              res(mergeLeft({ err: false, message: null, code: 0 }, window._fb))\n            }\n          }, 100)\n        })\n      } while (isNil(isFB))\n      res(isFB)\n    }\n  })\n"]},"metadata":{},"sourceType":"module"}