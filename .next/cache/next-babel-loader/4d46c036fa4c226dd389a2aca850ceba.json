{"ast":null,"code":"import { o, mergeRight, mergeLeft, pick, hasPath, is, complement, isNil, concat, compose, map, reduce, zip, pluck, mergeDeepLeft } from \"ramda\";\nimport { xNil } from \"nd/util\";\nimport Web3 from \"web3\";\n\nconst abi_erc20 = require(\"./IERC20.json\");\n\nexport const ETHEREUM_NETWORKS = {\n  \"1\": \"mainnet\",\n  \"3\": \"ropsten\",\n  \"4\": \"rinkby\",\n  \"42\": \"kovan\"\n};\nexport const isAddress = address => window.web3.utils.isAddress(address);\nexport const toWei = amount => window.web3.utils.toWei(amount);\nexport const fromWei = amount => window.web3.utils.fromWei(amount);\n\nconst setETH = async ({\n  val: {\n    network,\n    new_address\n  },\n  set,\n  conf,\n  global,\n  get\n}) => {\n  let web3_address = null;\n  let current_network = null;\n  let balance = null;\n\n  if (complement(isNil)(window.web3.currentProvider)) {\n    current_network = window.web3.currentProvider.networkVersion || window.web3.currentProvider._network;\n\n    if (current_network === (network || conf.web3.network)) {\n      web3_address = new_address || window.web3.currentProvider.selectedAddress || window.web3.currentProvider._selectedAddress;\n      balance = await window.web3.eth.getBalance(web3_address);\n    }\n  }\n\n  let obj = {\n    web3_network: current_network,\n    web3_address: web3_address,\n    eth_balance: {\n      network: current_network,\n      str: window.web3.utils.fromWei(balance || \"0\"),\n      wei: balance,\n      address: web3_address\n    }\n  };\n\n  if (complement(isNil)(web3_address) && isNil(get(\"address_in_use\"))) {\n    obj.address_in_use = \"eth\";\n  } else if (isNil(web3_address)) {\n    obj.address_in_use = isNil(get(\"auth_selected\")) ? null : \"auth\";\n  }\n\n  global.web3_address = web3_address;\n  obj.web3_updated = Date.now();\n  set(obj, null);\n  set(true, \"web3_init\");\n  return obj;\n};\n\nexport const initWeb3 = async ({\n  val: {\n    network,\n    balances\n  },\n  conf,\n  fn,\n  set\n}) => {\n  if (window.ethereum) {\n    window.web3 = new Web3(window.ethereum);\n\n    try {\n      await window.ethereum.enable();\n    } catch (error) {\n      console.log(\"access denied\");\n    }\n  } else if (window.web3) {\n    window.web3 = new Web3(window.web3.currentProvider);\n  } else {\n    console.log(\"Non-Ethereum browser detected. You should consider trying MetaMask!\");\n  }\n\n  if (complement(isNil)(window.web3)) {\n    fn(setETH)({\n      network\n    });\n\n    if (!isNil(window.web3.currentProvider.publicConfigStore)) {\n      window.web3.currentProvider.publicConfigStore.on(\"update\", c => {\n        fn(setETH)({\n          network\n        });\n      });\n    } else if (!isNil(window.ethereum)) {\n      window.ethereum.on(\"chainChanged\", c => window.location.reload());\n      window.ethereum.on(\"message\", c => fn(setETH)({\n        network\n      }));\n      window.ethereum.on(\"accountsChanged\", accounts => fn(setETH)({\n        network,\n        new_address: accounts[0]\n      }));\n    }\n  } else {\n    set(true, \"web3_init\");\n  }\n\n  return;\n};\n\nconst listenTransaction = async ({\n  method,\n  args,\n  eth,\n  from,\n  to,\n  value\n}) => {\n  let hashFunc = is(Function)(args[args.length - 1]) ? args.pop() : null;\n  const obj = is(Object)(args[args.length - 1]) ? args.pop() : {};\n  hashFunc = is(Function)(obj.transactionHash) ? obj.transactionHash : hashFunc;\n  let _sender = {\n    from\n  };\n  if (xNil(to)) _sender.to = to;\n  if (xNil(value)) _sender.value = value;\n  const sender = o(mergeRight(_sender), pick([\"from\", \"to\", \"value\", \"gas\", \"gasPrice\", \"data\", \"nonce\"]))(obj);\n  let receipt = null;\n  let err = null;\n  let hash = null;\n\n  try {\n    receipt = await (eth ? method(sender) : method(...args).send(sender)).on(\"transactionHash\", async hash => {\n      hash = hash;\n      if (is(Function)(hashFunc)) hashFunc(hash);\n    }).on(\"confirmation\", async (number, receipt) => {\n      if (is(Function)(obj.confirmation)) obj.confirmation(number, receipt);\n    }).on(\"error\", async error => {\n      if (is(Function)(obj.error)) obj.error(error);\n    });\n  } catch (e) {\n    err = e;\n  }\n\n  return [err, receipt];\n};\n\nexport const contract = ({\n  val: {\n    abi,\n    address\n  },\n  get\n}) => {\n  const contract = new window.web3.eth.Contract(abi, address);\n  let methods = {};\n\n  for (let v of abi) {\n    if (v.type === \"function\" && v.constant) {\n      methods[v.name] = (...args) => contract.methods[v.name](...args).call();\n    } else if (v.type === \"function\" && v.constant !== true) {\n      methods[v.name] = async (...args) => {\n        return await listenTransaction({\n          method: contract.methods[v.name],\n          args,\n          from: get(\"web3_address\")\n        });\n      };\n    }\n  }\n\n  return methods;\n};\nexport const erc20 = ({\n  val: {\n    token,\n    address\n  },\n  conf,\n  fn\n}) => {\n  const contract_address = xNil(token) && hasPath([\"web3\", \"erc20\", token])(conf) ? conf.web3.erc20[token] : address;\n  return fn(contract)({\n    abi: abi_erc20,\n    address: contract_address\n  });\n};\nexport const eth = ({\n  fn,\n  get\n}) => {\n  let web3js = {\n    balanceOf: address => window.web3.eth.getBalance(address || get(\"web3_address\")),\n    getBalance: address => window.web3.eth.getBalance(address || get(\"web3_address\"))\n  };\n\n  web3js.transfer = async (...args) => {\n    return await listenTransaction({\n      eth: true,\n      to: args[0],\n      value: args[1],\n      method: window.web3.eth.sendTransaction,\n      args: args.slice(2),\n      from: get(\"web3_address\")\n    });\n  };\n\n  web3js.sendTransaction = async (...args) => {\n    return await listenTransaction({\n      eth: true,\n      method: window.web3.eth.sendTransaction,\n      args,\n      from: get(\"web3_address\")\n    });\n  };\n\n  return web3js;\n};","map":{"version":3,"sources":["/home/basque/hide/next-dapp/nd/web3/web3.js"],"names":["o","mergeRight","mergeLeft","pick","hasPath","is","complement","isNil","concat","compose","map","reduce","zip","pluck","mergeDeepLeft","xNil","Web3","abi_erc20","require","ETHEREUM_NETWORKS","isAddress","address","window","web3","utils","toWei","amount","fromWei","setETH","val","network","new_address","set","conf","global","get","web3_address","current_network","balance","currentProvider","networkVersion","_network","selectedAddress","_selectedAddress","eth","getBalance","obj","web3_network","eth_balance","str","wei","address_in_use","web3_updated","Date","now","initWeb3","balances","fn","ethereum","enable","error","console","log","publicConfigStore","on","c","location","reload","accounts","listenTransaction","method","args","from","to","value","hashFunc","Function","length","pop","Object","transactionHash","_sender","sender","receipt","err","hash","send","number","confirmation","e","contract","abi","Contract","methods","v","type","constant","name","call","erc20","token","contract_address","web3js","balanceOf","transfer","sendTransaction","slice"],"mappings":"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","sourcesContent":["import {\n  o,\n  mergeRight,\n  mergeLeft,\n  pick,\n  hasPath,\n  is,\n  complement,\n  isNil,\n  concat,\n  compose,\n  map,\n  reduce,\n  zip,\n  pluck,\n  mergeDeepLeft\n} from \"ramda\"\n\nimport { xNil } from \"nd/util\"\n\nimport Web3 from \"web3\"\n\nconst abi_erc20 = require(\"./IERC20.json\")\n\nexport const ETHEREUM_NETWORKS = {\n  \"1\": \"mainnet\",\n  \"3\": \"ropsten\",\n  \"4\": \"rinkby\",\n  \"42\": \"kovan\"\n}\n\nexport const isAddress = address => window.web3.utils.isAddress(address)\n\nexport const toWei = amount => window.web3.utils.toWei(amount)\n\nexport const fromWei = amount => window.web3.utils.fromWei(amount)\n\nconst setETH = async ({\n  val: { network, new_address },\n  set,\n  conf,\n  global,\n  get\n}) => {\n  let web3_address = null\n  let current_network = null\n  let balance = null\n  if (complement(isNil)(window.web3.currentProvider)) {\n    current_network =\n      window.web3.currentProvider.networkVersion ||\n      window.web3.currentProvider._network\n    if (current_network === (network || conf.web3.network)) {\n      web3_address =\n        new_address ||\n        window.web3.currentProvider.selectedAddress ||\n        window.web3.currentProvider._selectedAddress\n      balance = await window.web3.eth.getBalance(web3_address)\n    }\n  }\n  let obj = {\n    web3_network: current_network,\n    web3_address: web3_address,\n    eth_balance: {\n      network: current_network,\n      str: window.web3.utils.fromWei(balance || \"0\"),\n      wei: balance,\n      address: web3_address\n    }\n  }\n\n  if (complement(isNil)(web3_address) && isNil(get(\"address_in_use\"))) {\n    obj.address_in_use = \"eth\"\n  } else if (isNil(web3_address)) {\n    obj.address_in_use = isNil(get(\"auth_selected\")) ? null : \"auth\"\n  }\n\n  global.web3_address = web3_address\n  obj.web3_updated = Date.now()\n  set(obj, null)\n  set(true, \"web3_init\")\n  return obj\n}\n\nexport const initWeb3 = async ({\n  val: { network, balances },\n  conf,\n  fn,\n  set\n}) => {\n  if (window.ethereum) {\n    window.web3 = new Web3(window.ethereum)\n    try {\n      await window.ethereum.enable()\n    } catch (error) {\n      console.log(\"access denied\")\n    }\n  } else if (window.web3) {\n    window.web3 = new Web3(window.web3.currentProvider)\n  } else {\n    console.log(\n      \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\n    )\n  }\n  if (complement(isNil)(window.web3)) {\n    fn(setETH)({ network })\n    if (!isNil(window.web3.currentProvider.publicConfigStore)) {\n      window.web3.currentProvider.publicConfigStore.on(\"update\", c => {\n        fn(setETH)({ network })\n      })\n    } else if (!isNil(window.ethereum)) {\n      window.ethereum.on(\"chainChanged\", c => window.location.reload())\n      window.ethereum.on(\"message\", c => fn(setETH)({ network }))\n      window.ethereum.on(\"accountsChanged\", accounts =>\n        fn(setETH)({ network, new_address: accounts[0] })\n      )\n    }\n  } else {\n    set(true, \"web3_init\")\n  }\n  return\n}\n\nconst listenTransaction = async ({ method, args, eth, from, to, value }) => {\n  let hashFunc = is(Function)(args[args.length - 1]) ? args.pop() : null\n  const obj = is(Object)(args[args.length - 1]) ? args.pop() : {}\n  hashFunc = is(Function)(obj.transactionHash) ? obj.transactionHash : hashFunc\n  let _sender = { from }\n  if (xNil(to)) _sender.to = to\n  if (xNil(value)) _sender.value = value\n  const sender = o(\n    mergeRight(_sender),\n    pick([\"from\", \"to\", \"value\", \"gas\", \"gasPrice\", \"data\", \"nonce\"])\n  )(obj)\n\n  let receipt = null\n  let err = null\n  let hash = null\n  try {\n    receipt = await (eth ? method(sender) : method(...args).send(sender))\n      .on(\"transactionHash\", async hash => {\n        hash = hash\n        if (is(Function)(hashFunc)) hashFunc(hash)\n      })\n      .on(\"confirmation\", async (number, receipt) => {\n        if (is(Function)(obj.confirmation)) obj.confirmation(number, receipt)\n      })\n      .on(\"error\", async error => {\n        if (is(Function)(obj.error)) obj.error(error)\n      })\n  } catch (e) {\n    err = e\n  }\n  return [err, receipt]\n}\n\nexport const contract = ({ val: { abi, address }, get }) => {\n  const contract = new window.web3.eth.Contract(abi, address)\n  let methods = {}\n  for (let v of abi) {\n    if (v.type === \"function\" && v.constant) {\n      methods[v.name] = (...args) => contract.methods[v.name](...args).call()\n    } else if (v.type === \"function\" && v.constant !== true) {\n      methods[v.name] = async (...args) => {\n        return await listenTransaction({\n          method: contract.methods[v.name],\n          args,\n          from: get(\"web3_address\")\n        })\n      }\n    }\n  }\n  return methods\n}\n\nexport const erc20 = ({ val: { token, address }, conf, fn }) => {\n  const contract_address =\n    xNil(token) && hasPath([\"web3\", \"erc20\", token])(conf)\n      ? conf.web3.erc20[token]\n      : address\n  return fn(contract)({ abi: abi_erc20, address: contract_address })\n}\n\nexport const eth = ({ fn, get }) => {\n  let web3js = {\n    balanceOf: address =>\n      window.web3.eth.getBalance(address || get(\"web3_address\")),\n    getBalance: address =>\n      window.web3.eth.getBalance(address || get(\"web3_address\"))\n  }\n  web3js.transfer = async (...args) => {\n    return await listenTransaction({\n      eth: true,\n      to: args[0],\n      value: args[1],\n      method: window.web3.eth.sendTransaction,\n      args: args.slice(2),\n      from: get(\"web3_address\")\n    })\n  }\n  web3js.sendTransaction = async (...args) => {\n    return await listenTransaction({\n      eth: true,\n      method: window.web3.eth.sendTransaction,\n      args,\n      from: get(\"web3_address\")\n    })\n  }\n\n  return web3js\n}\n"]},"metadata":{},"sourceType":"module"}