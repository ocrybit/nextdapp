{"ast":null,"code":"var _jsxFileName = \"/home/basque/hide/next-dapp/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, Fragment } from \"react\";\nimport Conf from \"nd/core/Conf\";\nimport { bind, Tracker } from \"nd\";\nconst Count = bind(props => {\n  const fn = props.init();\n  const btn = {\n    display: \"inline-block\",\n    margin: \"20px 10px\",\n    cursor: \"pointer\",\n    backgroundColor: \"#222\",\n    color: \"white\",\n    padding: \"10px\",\n    borderRadius: \"3px\"\n  };\n  return __jsx(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    style: btn,\n    onClick: () => {\n      props.set((props.count || 0) + 1, \"count\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, \"count: \", props.count || 0), __jsx(\"div\", {\n    style: btn,\n    onClick: () => {\n      props.set((props.count2 || 0) + 1, \"count2\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, \"count2: \", props.count2 || 0), __jsx(\"div\", {\n    style: btn,\n    onClick: () => {\n      props.set((props.count3 || 0) + 1, \"count3\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \"count3: \", props.count3 || 0), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"SUM [ count + count2 + count3 = \", props.sum, \" ]\"), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, \"PRODUCT [ count * count2 * count3 = \", props.product || 0, \" ]\"), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \" \", __jsx(\"div\", {\n    style: btn,\n    onClick: () => {\n      fn.getSquare();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, \"square: \", props.square || 0)));\n}, [\"count\", \"sum\", \"logConf\", \"add\", \"product\", \"count2\", \"count3\", \"square\", \"getSquare\"]);\nexport default bind(({\n  set,\n  init,\n  router\n}) => {\n  const fn = init();\n  useEffect(() => {\n    set({\n      count: 100\n    });\n    fn.logConf();\n  }, []);\n  return __jsx(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, __jsx(Count, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }), __jsx(Conf, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }), __jsx(Tracker, {\n    name: \"count_tracker\",\n    type: \"any\",\n    watch: [\"count\", \"count2\", \"count3\"],\n    props: [\"count\", \"count2\", \"count3\"],\n    func: ({\n      set,\n      props: {\n        count,\n        count2,\n        count3\n      }\n    }) => {\n      set(count * count2 * count3, \"product\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }));\n}, [\"count\", \"count2\", \"count3\", \"product\", \"square\", \"logConf\", {\n  getSquare: [({\n    global,\n    set,\n    props: {\n      product\n    }\n  }) => {\n    set(product * product, \"square\");\n  }, [\"product\"]],\n  sum: {\n    get: atoms => ({\n      get\n    }) => (get(atoms.count) || 0) + (get(atoms.count2) || 0) + (get(atoms.count3) || 0)\n  }\n}]);","map":{"version":3,"sources":["/home/basque/hide/next-dapp/pages/index.js"],"names":["useEffect","Fragment","Conf","bind","Tracker","Count","props","fn","init","btn","display","margin","cursor","backgroundColor","color","padding","borderRadius","textAlign","set","count","count2","count3","sum","product","getSquare","square","router","logConf","global","get","atoms"],"mappings":"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","sourcesContent":["import { useEffect, Fragment } from \"react\"\nimport Conf from \"nd/core/Conf\"\nimport { bind, Tracker } from \"nd\"\n\nconst Count = bind(\n  props => {\n    const fn = props.init()\n    const btn = {\n      display: \"inline-block\",\n      margin: \"20px 10px\",\n      cursor: \"pointer\",\n      backgroundColor: \"#222\",\n      color: \"white\",\n      padding: \"10px\",\n      borderRadius: \"3px\"\n    }\n    return (\n      <div style={{ textAlign: \"center\" }}>\n        <div\n          style={btn}\n          onClick={() => {\n            props.set((props.count || 0) + 1, \"count\")\n          }}\n        >\n          count: {props.count || 0}\n        </div>\n        <div\n          style={btn}\n          onClick={() => {\n            props.set((props.count2 || 0) + 1, \"count2\")\n          }}\n        >\n          count2: {props.count2 || 0}\n        </div>\n        <div\n          style={btn}\n          onClick={() => {\n            props.set((props.count3 || 0) + 1, \"count3\")\n          }}\n        >\n          count3: {props.count3 || 0}\n        </div>\n        <div>SUM [ count + count2 + count3 = {props.sum} ]</div>\n        <div>PRODUCT [ count * count2 * count3 = {props.product || 0} ]</div>\n        <div>\n          {\" \"}\n          <div\n            style={btn}\n            onClick={() => {\n              fn.getSquare()\n            }}\n          >\n            square: {props.square || 0}\n          </div>\n        </div>\n      </div>\n    )\n  },\n  [\n    \"count\",\n    \"sum\",\n    \"logConf\",\n    \"add\",\n    \"product\",\n    \"count2\",\n    \"count3\",\n    \"square\",\n    \"getSquare\"\n  ]\n)\n\nexport default bind(\n  ({ set, init, router }) => {\n    const fn = init()\n    useEffect(() => {\n      set({ count: 100 })\n      fn.logConf()\n    }, [])\n    return (\n      <Fragment>\n        <Count />\n        <Conf />\n        <Tracker\n          name=\"count_tracker\"\n          type=\"any\"\n          watch={[\"count\", \"count2\", \"count3\"]}\n          props={[\"count\", \"count2\", \"count3\"]}\n          func={({ set, props: { count, count2, count3 } }) => {\n            set(count * count2 * count3, \"product\")\n          }}\n        />\n      </Fragment>\n    )\n  },\n  [\n    \"count\",\n    \"count2\",\n    \"count3\",\n    \"product\",\n    \"square\",\n    \"logConf\",\n    {\n      getSquare: [\n        ({ global, set, props: { product } }) => {\n          set(product * product, \"square\")\n        },\n        [\"product\"]\n      ],\n      sum: {\n        get: atoms => ({ get }) =>\n          (get(atoms.count) || 0) +\n          (get(atoms.count2) || 0) +\n          (get(atoms.count3) || 0)\n      }\n    }\n  ]\n)\n"]},"metadata":{},"sourceType":"module"}